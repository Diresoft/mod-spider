// SASS Libraries
@use 'sass:color';
@use 'sass:math';
@use 'sass:map';


// Module Libraries
@use 'functions.scss' as *;

// Project Libraries

// Theme/Vars
@use 'vars.scss' as *;

// Third Party - Import

// ---------------
// Cache in easier to use variables
$slab-height:		map.get( $slab-description, "height");
$corner-radius:		map.get( $slab-description, "radius");
$edge-slope:		map.get( $slab-description, "edge-slope");
$base-curvature:	map.get( $slab-description, "base-curvature");
$lip-curvature:		map.get( $slab-description, "lip-curvature");

$edge-base-length:	slopeToDistance( $slab-height, $edge-slope );
$lighting:			computeLighting( $slab-description, $light-description, map.get( $slab-description, "surface" ) );

$surface-lit:		map.get( map.get( $lighting, "surface" ), "lit" );
$surface-mid:		map.get( map.get( $lighting, "surface" ), "mid" );
$surface-bg:		map.get( map.get( $lighting, "surface" ), "bg"  );
$surface-drk:		map.get( map.get( $lighting, "surface" ), "drk" );
$surface-sha:		map.get( map.get( $lighting, "surface" ), "sha" );

$offset-pct-x:		map.get( $lighting, "offset-pct-x" );
$offset-pct-y:		map.get( $lighting, "offset-pct-y" );
$offset-x:			map.get( $lighting, "offset-x" );
$offset-y:			map.get( $lighting, "offset-y" );

$ob: 8px;
$ib: 2px;

@mixin slab-outer-edge( $edge-run, $corner-radius, $curvature )
{
	$t: unitless( $edge-run );
	$r: unitless( $corner-radius );
	$s: 100 + (2*$r) + $t;

	position:	absolute;
	z-index:	-1;

	left:	0;
	top:	0;
	right:	0;
	bottom:	0;

	border:					solid 1px;
	border-image-source:	makeBorderSVGUrl( $surface-lit, $surface-mid, $surface-drk, $offset-pct-x, $offset-pct-y, $r, $s );
	border-image-slice:		( $r + math.div( $t, 2) ) fill;
	border-image-outset:	math.div( $t, 2 ) + 1px;
	border-image-width:		$t;
	border-image-repeat:	stretch;

	filter: blur( $curvature );
}

@mixin slab-top-surface( $edge-run, $corner-radius, $curvature )
{
	$t: unitless( $edge-run );
	$r: unitless( $corner-radius );
	$s: 100 + (2*$r) + $t;

	position:	absolute;
	z-index:	-1;

	$fudge: $t * 0.25;

	left:	0;
	top:	0;
	right:	0;
	bottom:	0;

	background-color:	$surface-mid;
	border-radius:		$corner-radius;
	filter:				blur( $curvature );
}

@mixin slab {
	&::before {
		content: "";
		$radius-offset: $edge-base-length;
		@include slab-outer-edge( $edge-base-length, $corner-radius + $radius-offset, $base-curvature );
	}
	&::after {
		content: "";
		@include slab-top-surface( $edge-base-length, $corner-radius, $lip-curvature );
	}
}