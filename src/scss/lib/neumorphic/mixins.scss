// SASS Libraries
@use 'sass:color';
@use 'sass:math';
@use 'sass:map';
@use 'sass:list';

// Module Libraries
@use 'functions.scss' as *;

// Project Libraries

// Theme/Vars
@use 'vars.scss' as *;
@use '../../theme.scss' as *;

@mixin slab-lighting (
	  $height:			$neumorphic-slab-height
	, $slope:			$neumorphic-slab-slope
	, $colour:			$neumorphic-slab-colour
	, $light-yaw:		$neumorphic-light-yaw
	, $light-strength:	$neumorphic-light-strength
	, $base-contour:	$neumorphic-slab-base-contour
	, $lip-contour:		$neumorphic-slab-lip-contour
) {
	$lit: color.scale( $colour, $lightness: $light-strength * 0.8, $saturation: -30%, $alpha: -30%);
	$mid: $colour;
	$drk: color.scale( $colour, $lightness: $light-strength * -2.5, $saturation: 10%, $alpha: -30%);

	&::before
	{
		$xp: math.sin( $light-yaw );
		$yp: math.cos( $light-yaw );
		$hm: math.clamp( -1, unitless( $height ), 1 );

		$ed:  math.abs($height) * math.tan( $slope );
		$edc: $ed + $base-contour + 1;

		$so: $ed * 0.5;
		$xo: $edc * $xp * $hm;
		$yo: $edc * $yp * $hm;

		$si: 0px;
		$xi: $lip-contour * $xp * $hm;
		$yi: $lip-contour * $yp * $hm;
		
		box-shadow:
			        (-$xo) (-$yo) $base-contour $so $lit
			,       ( $xo) ( $yo) $base-contour $so $drk
			, inset ( $xi) ( $yi) $lip-contour  $si $lit
			, inset (-$xi) (-$yi) $lip-contour  $si $drk
		;
	}
}

@mixin slab-corner( $corner-radius: $neumorphic-slab-corner-radius )
{
	&::before,
	&::after{
		border-radius: $corner-radius;
	}
}

@mixin slab(
	  $height:			$neumorphic-slab-height
	, $slope:			$neumorphic-slab-slope
	, $colour:			$neumorphic-slab-colour
	, $corner-radius: $neumorphic-slab-corner-radius
	, $light-yaw:		$neumorphic-light-yaw
	, $light-strength:	$neumorphic-light-strength
) {
	&::before {
		content: "";
		position: absolute;
		z-index: -1;
		left:	0;
		right:	0;
		top:	0;
		bottom:	0;
		transition:
			  box-shadow 150ms ease-in-out
		;
	}
	@include slab-corner	( $corner-radius );
	@include slab-lighting	( $height, $slope, $colour, $light-yaw, $light-strength );
}